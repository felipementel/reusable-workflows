name: Sanbox Dispatch ⚡
run-name: "${{ github.actor }} - ${{ github.run_id }}"

on:
  pull_request:
    branches:
      - main
    types:
      closed
    paths-ignore:
      - '**.md'
      - '.github/**'
      - 'docker/**'
      - 'docs/**'
  workflow_call:
    inputs:
      environment:
        type: string
        description: 'Environment to run the workflow'
        required: true
        default: 'DEV'
      msg-canal-deploy:
        type: string
        description: 'Message to be displayed in the summary'
        required: false
        default: 'Canal DEPLOY - O melhor canal sobre .NET, Azure, DevOps e IA'
      #push-image
      imageName:
        type: string
        description: 'Image name to publish at github packages'
        required: true
        default: ""
      imageTag:
        type: string
        description: 'Image tag to publish at github packages'
        required: true
        default: ""

env:
#plus
  RED: '\033[0;31m'
  GREEN: '\033[0;32m'
  YELLOW: '\033[0;33m'
  BLUE: '\033[0;34m'
  RESET: '\033[0m'

jobs:

  check-image:
    name: Check if image exists
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    outputs:
      image-exists: ${{ steps.check-image-and-tag.outputs.IMAGE_EXISTS }}
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if image with same tag exists
        id: check-image-and-tag
        run: |
          IMAGE_TAG="ghcr.io/${{ github.actor }}/deploy.${{ inputs.imageName }}:${{ inputs.imageTag }}"
          echo "Checking existence of $IMAGE_TAG..."
          if docker manifest inspect "$IMAGE_TAG" > /dev/null 2>&1; then
            echo -e "✅ ${GREEN} Image exists in registry"
            echo "IMAGE_EXISTS=true" >> "$GITHUB_OUTPUT"
          else
            echo -e "🔍 ${RED} Image does not exist in registry"
            echo "IMAGE_EXISTS=false" >> "$GITHUB_OUTPUT"
          fi
          
  publish:
    name: Push image to Registry
    environment: ${{ inputs.environment }}
    # if: ${{ github.event.pull_request.merged && github.event.pull_request.state == 'closed' }}
    needs: [check-image]
    runs-on: ubuntu-latest
    if: ${{ needs.check-image.outputs.image-exists == 'true' }}
    permissions:
      packages: write
      contents: read
    steps:
      - name: Write to workflow job summary DEPLOY
        run: |
          SUMMARY=$'
          # Detalhes sobre publicação\n
          | imagem | tag | 
          |--|--|
          | ${{ inputs.imageTag }} | ${{ inputs.imageTag }} | \n
          Mensagem: ${{ inputs.msg-canal-deploy }}\n'
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
          
  notify-image-exists:
    name: Notify when already image exists
    needs: [check-image]
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    if: ${{ needs.check-image.outputs.image-exists == 'false' }}
    steps:
      - name: Write to workflow job summary
        run: |
          echo -e "${RED} Image ${{ inputs.imageName }} with tag ${{ inputs.imageTag }} already exists. Skipping push image to registry and publish on Azure Cloud." >> $GITHUB_STEP_SUMMARY
